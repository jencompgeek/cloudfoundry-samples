<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.8.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:component-scan
		base-package="org.springframework.data.mongodb.examples.custsvc.data" />

    <context:property-placeholder/>

	<tx:annotation-driven transaction-manager="transactionManager"
		mode="aspectj" />

	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<property name="dataSource" ref="customer-db" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
	</bean>

	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongodbFactory" />
	</bean>

	<bean class="org.springframework.data.mongodb.core.MongoExceptionTranslator" />

	<!-- Mongo cross-store aspect config -->
	<bean
		class="org.springframework.data.mongodb.crossstore.MongoDocumentBacking"
		factory-method="aspectOf">
		<property name="changeSetPersister" ref="mongoChangeSetPersister" />
	</bean>
	<bean id="mongoChangeSetPersister"
		class="org.springframework.data.mongodb.crossstore.MongoChangeSetPersister">
		<property name="mongoTemplate" ref="mongoTemplate" />
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

   <!--  Cloud Foundry automatically activates the cloud profile -->
	<beans profile="cloud">
	    <cloud:mongo-db-factory id="mongodbFactory" />
		<cloud:data-source id="customer-db" />
		<bean id="jpaVendorAdapter"
			class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:database="MYSQL">
		</bean>
	</beans>

    <beans profile="heroku">
        <bean id="mongoURI" class="com.mongodb.MongoURI">
            <constructor-arg value="${MONGOHQ_URL}"/>
        </bean>
        <bean id="mongodbFactory" class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
            <constructor-arg ref="mongoURI"/>
        </bean>
        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="${DATABASE_URL}"/>
        </bean>
        <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="customer-db">
            <property name="driverClassName" value="org.postgresql.Driver" />
            <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>
            <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
            <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        </bean>
        <bean id="jpaVendorAdapter"
              class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:database="POSTGRESQL">
        </bean>
    </beans>

    <!--  Default profile for local testing -->
	<beans profile="default">
		<mongo:db-factory id="mongodbFactory" dbname="customer-survey" host="127.0.0.1" port="27017"/>
		<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="customer-db">
			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
			<property name="url" value="jdbc:mysql://localhost/customer" />
			<property name="username" value="cross" />
			<property name="password" value="store" />
		</bean>
		<bean id="jpaVendorAdapter"
			class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:database="MYSQL">
		</bean>
	</beans>

</beans>
